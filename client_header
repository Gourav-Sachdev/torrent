#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <unistd.h>
#include <netdb.h>
#include <netinet/in.h>
#include <iostream>
#include <string.h>
#include <pthread.h> 
#include <cmath>
#include <openssl/sha.h>

#define BUFFER_SIZE 100000
#define CHUNK_SIZE  32768
#define ll long long
using namespace std;	

void readFile(int fd, string filename, vector<int> chunks, int last_chunk, int last_chunk_size);

void sendFile(int sockfd, string filename, vector<int> chunks);

void * serverthread(void *portnoadd);

void receiveChunk (FILE * fp ,int peer_fd, int chunkno, int last_chunk, int last_chunk_size);

void sendChunk (FILE * fp ,int peer_fd, int chunkno);

void * sendingthread(void * peer_fd);

vector<string> commandTokenize(string command);

void printSHA(const unsigned char buffer[], int n);

struct  args_struct
{
	string filename;
	string ip;
	int port;
	vector<int> chunks;
	int last_chunk;
	int last_chunk_size;
};